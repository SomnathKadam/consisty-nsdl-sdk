

buildscript {
  ext.getExtOrDefault = {name ->
    return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['ConsistyNsdlSdk_' + name]
  }

  repositories {
    google()
    mavenCentral()
    maven {
      url = "https://api.bitbucket.org/2.0/repositories/perfios-android/SDK/src/releases/"
      authentication {
        header(HttpHeaderAuthentication)
      }
      credentials(HttpHeaderCredentials) {
        name = "Authorization"
        value = "Bearer ATCTT3xFfGN0-40IkAcFcdJHx9_w445Z4DFAE4XQFLeHsJ1pwJXW3oy4zC8FrRiO3c8r3TjPxTN5xpLD9LkopybPI8M-Xtt5zTbYCuMyuHJN0pLpFFQW16XQyC9Q-JdrE3OwLhxkdiUIO5u2vXWQpUcHJIhY6aAW9Eo1ZaS-T8aryJc2Wu-64uk=320ACB22"
      }
    }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.7.3"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${getExtOrDefault('kotlinVersion')}"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["ConsistyNsdlSdk_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}


android {
  packagingOptions {
    pickFirst 'lib/x86/libc++_shared.so'
    pickFirst 'lib/x86_64/libc++_shared.so'
    pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    pickFirst 'lib/arm64-v8a/libc++_shared.so'
  }

  if (supportsNamespace()) {
    namespace "com.consistynsdlsdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

  }

  dataBinding {
    enabled = true
  }

  buildFeatures {
    dataBinding true
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  google()

  mavenCentral()

  maven { url "https://jitpack.io" }


}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  implementation "com.facebook.react:react-android:0.76.0"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  // Additional dependencies
  implementation("com.airbnb.android:lottie:4.1.0")
  implementation("com.intuit.sdp:sdp-android:1.0.6")
  implementation("com.github.vivchar:ViewPagerIndicator:1.1.0")
  implementation("com.github.smart-fun:XmlToJson:1.5.1")

  // AndroidX Lifecycle components
  implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0")
  implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.4.0")

  // Networking libraries
  implementation("com.squareup.okhttp3:okhttp:4.9.0")
  implementation("com.squareup.retrofit2:converter-jackson:2.9.0")
  implementation("com.android.volley:volley:1.2.1")

  // Perfios liveness SDK
  implementation("com.perfios.liveness:sdk:2.4.0")

  // Root detection library
  implementation("com.scottyab:rootbeer-lib:0.1.0")

  implementation ("com.github.chintan369:Ipify-Android:1.0.1")

  //camera
  implementation "androidx.camera:camera-camera2:1.3.0-beta01"
  implementation "androidx.camera:camera-lifecycle:1.3.0-beta01"
  implementation "androidx.camera:camera-view:1.3.0-beta01"

  api project(":assisted_sdk")
  api project(":protean_core_sdk")
}

